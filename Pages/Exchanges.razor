@page "/exchanges"
@using CoinGeckoApi_Blazor.Services
@using CoinGeckoApi_Blazor.Model
@inject ExchangesService ExchangesService


<h1>Exchanges</h1>

@if (exchanges == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Trade Volume 24h BTC normalized</th>
                <th>Score</th>
                <th>Score Rank</th>
                <th>Url</th>
                <th>Image</th>
                <th>Year Established</th>
                <th>Has trading incentive</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var exchange in exchanges)
            {
            <tr>
                <td>@exchange.id</td>
                <td>@exchange.name</td>
                <td>@exchange.trade_volume_24h_btc_normalized</td>
                <td>@exchange.trust_score</td>
                <td>@exchange.trust_score_rank</td>
                <td>@exchange.url</td>
                <td>@exchange.image</td>
                <td>@exchange.year_established</td>
                <td>@exchange.has_trading_incentive</td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Exchange> exchanges;

    protected override async Task OnInitializedAsync()
    {
        exchanges = await ExchangesService.GetExchangesAsync();
    }
}

